{
  "_args": [
    [
      "node-riakcs",
      "/Users/prashantha/Documents/dev/concur-proxy"
    ]
  ],
  "_defaultsLoaded": true,
  "_engineSupported": true,
  "_from": "node-riakcs@latest",
  "_id": "node-riakcs@0.0.6",
  "_inCache": true,
  "_installable": true,
  "_location": "/node-riakcs",
  "_nodeVersion": "v0.6.18",
  "_npmUser": {
    "email": "andreasbeuge@me.com",
    "name": "herrBeesch"
  },
  "_npmVersion": "1.3.5",
  "_phantomChildren": {},
  "_requested": {
    "name": "node-riakcs",
    "raw": "node-riakcs",
    "rawSpec": "",
    "scope": null,
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/node-riakcs/-/node-riakcs-0.0.6.tgz",
  "_shasum": "2c81e4e337af244f42c274746ec7f7999024529c",
  "_shrinkwrap": null,
  "_spec": "node-riakcs",
  "_where": "/Users/prashantha/Documents/dev/concur-proxy",
  "author": {
    "email": "a.beuge@betzold.de",
    "name": "Andy Beuge",
    "url": "https://blog.herrbeesch.fuettertdasnetz.de"
  },
  "bugs": {
    "email": "a.beuge@betzold.de",
    "url": "http://github.com/herrbeesch/node-riakcs/issues"
  },
  "contributors": [],
  "dependencies": {
    "data2xml": "0.4.x",
    "dateformat": ">= 1.0.2-1.2.3",
    "fmt": ">= 0.4.0",
    "passgen": ">= 1.0.1",
    "request": ">=2.12.0",
    "underscore": ">= 1.3.3",
    "xml": ">= 0.0.7",
    "xml2js": "~ 0.1.14"
  },
  "description": "npm package for NodeJS to talk to riakCS",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "2c81e4e337af244f42c274746ec7f7999024529c",
    "tarball": "https://registry.npmjs.org/node-riakcs/-/node-riakcs-0.0.6.tgz"
  },
  "engines": {
    "node": ">= 0.6.0"
  },
  "homepage": "https://github.com/herrbeesch/node-riakcs",
  "keywords": [
    "api",
    "riakcs",
    "s3"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/appsattic/node-awssum/raw/master/LICENSE"
    }
  ],
  "main": "riakcs.js",
  "maintainers": [
    {
      "email": "andreasbeuge@me.com",
      "name": "herrBeesch"
    }
  ],
  "name": "node-riakcs",
  "optionalDependencies": {},
  "readme": "# node-riakcs \n##### npm-package for riak cloud storage\n\n## Install\n\n<pre>\n  npm install node-riakcs\n</pre>\n\n### Configure your client \n\nRequest is designed to be the simplest way possible to make http calls. It supports HTTP.\n\n```javascript\nvar S3, riakcs, s3;\nriakcs = require('node-riakcs');\nS3 = riakcs.load('s3').S3;\n\nvar s3 = new S3({\n    'accessKeyId' : \"<YOUR_KEY_ID>\", //required\n    'secretAccessKey' : \"<YOUR_SECRET>\", //required\n    'hostname' : \"<YOUR_HOST>\", //required\n    'protocol' : \"http\", //optional\n    'proxy' : \"http://localhost:8080\", //optional\n});\n```\n## Examples (coffeescript + fmt)\n\n### Get Buckets\n\n```coffeescript\nrequire 'fmt'\ns3.ListBuckets (err, data)->\n  if err?\n    fmt.dump err, 'err'\n  if data?\n    fmt.dump data, 'data'\n```\n\n### Create a bucket\n\n```coffeescript\nrequire 'fmt'\n\nbucketArgs = {\n  BucketName : 'myBucket',\n}\n\ns3.CreateBucket bucketArgs , (err, data)->\n  if err?\n    fmt.dump err, 'err'\n  else  \n    fmt.dump data, 'data'\n```\n\n### Delete a bucket\n\n```coffeescript\nrequire 'fmt'\n\nbucketArgs = {\n  BucketName : 'myBucket'\n}\n\ns3.DeleteBucket bucketArgs , (err, data)->\n  if err?\n    fmt.dump err, 'err'\n  else  \n    fmt.dump data, 'data'\n```\n\n### Put an object (file)\n\n```coffeescript\nfmt = require 'fmt'\nfs = require 'fs'\n\n__filename ='my_local_song.mp3'\n\nfs.stat __filename, (err, file_info)->\n  data = fs.readFileSync( __filename )\n  createArgs = {\n    BucketName    : 'mybucket',\n    ObjectName    : 'my_bucket_song.mp3',\n    ContentLength : file_info.size,\n    Body          : data\n  } \n  \n  s3.PutObject createArgs, (error, result)->\n    if error?\n      fmt.dump error, 'err'\n    else          \n      fmt.dump result, 'data'\n```\n\n### Delete an object\n\n```coffeescript\nrequire 'fmt'\n\nargs = {\n  ObjectName : 'myObject',\n  BucketName : 'myBucket'\n}\n\ns3.DeleteObject Args , (err, data)->\n  if err?\n    fmt.dump err, 'err'\n  else  \n    fmt.dump data, 'data'\n```\n\n### Create a user (as admin user)\n\n```coffeescript\nrequire 'fmt'\n\nuserArgs = {\n  Email: 'myname@mydomain.com',\n  Name: 'my name',\n  ContentType: 'application/json',\n  UserPath : 'riak-cs/user'\n}\n\ns3.CreateUser userArgs, (err, data)->\n  if err?\n    fmt.dump err, 'err'\n  if data?\n    fmt.dump data, 'data'\n```\n\n\n### Get user information (as admin user for every user, or for oneself)\n```coffeescript\nrequire 'fmt'\n\ns3.GetUser { ObjectName : \"<USER_KEYS>\", UserPath : 'riak-cs/user/'}, (err, data)->\n  if err? \n    fmt.dump err, 'err'\n  if data?\n    fmt.dump data, 'data'\n```",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/herrbeesch/node-riakcs.git"
  },
  "version": "0.0.6"
}
